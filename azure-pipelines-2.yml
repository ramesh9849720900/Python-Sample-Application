trigger:
  branches:
    include:
      - master

variables:
  ##azureServiceConnectionId: 'ccc94bb2-c7b2-45c0-9b0a-37e1560b517a'
  webAppName: 'abcjdakshka'
  vmImageName: 'ubuntu-latest'
  environmentName: 'abcjdakshka'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.12'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(projectRoot)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop
            displayName: 'Publish package'

  - stage: Deploy
    displayName: 'Deploy Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          vmImage: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: '$(pythonVersion)'
                  displayName: 'Use Python version'

                - task: AzureWebApp@1
                  displayName: 'Deploy Azure Web App: $(webAppName)'
                  inputs:
                    ##azureSubscription: $(azureServiceConnectionId)
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
